from bppy import *

@b_thread
def add_a():
    count = 0
    while count < 7:
        yield {request: BEvent("A")}
        count += 1

@b_thread
def add_b_c():
    while True:
        yield {request: BEvent("B")}
        yield {waitFor: BEvent("C")}

@b_thread
def prevent_consecutive_g():
    while True:
        yield {waitFor: BEvent("G")}
        yield {block: BEvent("G")}

@b_thread
def add_h():
    count = 0
    while count < 4:
        yield {request: BEvent("H")}
        count += 1

@b_thread
def add_j():
    yield {waitFor: BEvent("J")}

b_program = BProgram(bthreads=[add_a, add_b_c, prevent_consecutive_g, add_h, add_j])
b_program.run()